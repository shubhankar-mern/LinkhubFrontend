# .github/workflows/main.yml

name: Deploy to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Print Secrets
      run: |
        echo "HOST: ${{ secrets.HOST }}"
        echo "USERNAME: ${{ secrets.USERNAME }}"
        echo "PASSWORD: ${{ secrets.PASSWORD }}"
        echo "PORT: ${{ secrets.PORT }}"  
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        pwd
        ls
        npm install
          
    - name: Run a multi-line script
      run: |
        mkdir ../build
        cp -TR . ../build
        tar -cvf deploy.tar ../build/

    - name: Delete existing LinkhubFrontend on VPS
      run: |
        sshpass -p ${{ secrets.PASSWORD }} ssh -o StrictHostKeyChecking=no  -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'rm -r /root/workplace/LinkhubFrontend'    
    
    - name: Deploy to VPS
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: "deploy.tar"
        target: "/root/workplace/LinkhubFrontend/"
    - name: Extract files on VPS
      run: |
        sshpass -p ${{ secrets.PASSWORD }} ssh -o StrictHostKeyChecking=no -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'cd /root/workplace/LinkhubFrontend && tar -xvf deploy.tar && rm deploy.tar && mv build/* . && rm -r build'           
   
    - name: Stop existing pm2 process
      run: |
          sshpass -p ${{ secrets.PASSWORD }} ssh -o StrictHostKeyChecking=no -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'pm2 stop frontend'
  
    - name: Build and Serve React App
      run: |
        sshpass -p ${{ secrets.PASSWORD }} ssh -o StrictHostKeyChecking=no -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'cd /root/workplace/LinkhubFrontend && npm install && npm run build && pm2 serve build 3000 --name frontend'
  
    - name: Save pm2 processes
      run: |
        sshpass -p ${{ secrets.PASSWORD }} ssh -o StrictHostKeyChecking=no -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'pm2 save'
